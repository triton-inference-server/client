# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

configure_file(__init__.py __init__.py COPYONLY)

if(NOT WIN32)
  file(COPY shared_memory DESTINATION .)

  #
  # libcshm.so
  #
  add_library(cshm SHARED shared_memory/shared_memory.cc)
  if(${TRITON_ENABLE_GPU})
    target_compile_definitions(cshm PUBLIC TRITON_ENABLE_GPU=1)
    target_link_libraries(cshm PUBLIC CUDA::cudart)
  endif() # TRITON_ENABLE_GPU
  target_link_libraries(cshm PRIVATE rt)

  #
  # libccudashm.so
  #
  if(${TRITON_ENABLE_GPU})
    file(COPY cuda_shared_memory DESTINATION .)
    add_library(
        ccudashm SHARED
        cuda_shared_memory/cuda_shared_memory.cc
        cuda_shared_memory/cencode.c
        cuda_shared_memory/cencode.h
    )
    target_include_directories(ccudashm PUBLIC ${CUDA_INCLUDE_DIRS})
    target_compile_definitions(ccudashm PUBLIC TRITON_ENABLE_GPU=1)
    target_link_libraries(ccudashm PUBLIC CUDA::cudart)
  endif() # TRITON_ENABLE_GPU
endif() # WIN32

if(NOT WIN32)
  configure_file(shared_memory/__init__.py shared_memory/__init__.py COPYONLY)
  if(${TRITON_ENABLE_GPU})
    configure_file(cuda_shared_memory/__init__.py cuda_shared_memory/__init__.py COPYONLY)
  endif() # TRITON_ENABLE_GPU
endif() # NOT WIN32
